# # Use Canny to find the edges
# out = cv2.Canny(input, 0, i)
# cv2.imshow('Canny', cv2.resize(out, (960, 600)))

# # Convert to colour space
# out = cv2.cvtColor(out, cv2.COLOR_GRAY2BGR)

# # Use Laplacian filter to highlight edges
# laplacian = cv2.GaussianBlur(out, (3,3), 0)
# laplacian = cv2.Laplacian(laplacian, cv2.CV_16S, ksize=3)
# laplacian = cv2.convertScaleAbs(laplacian)
# cv2.imshow('laplacian', cv2.resize(laplacian, (960, 600)))

# Display over original 
# out = cv2.cvtColor(out, cv2.COLOR_GRAY2BGR)
# out = cv2.addWeighted(drawing, 0.5, original, 0.5, 0)
# out = cv2.putText(out, "i: " + str(i) + "", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 255), 1, cv2.LINE_AA)

# Grab the input file, show it, save it, and grey it


# # Thicken up those lines
# kernel_cross = cv2.getStructuringElement(cv2.MORPH_CROSS,(5,5))
# kernal_square = cv2.getStructuringElement(cv2.MORPH_RECT,(5,5))
# thickened = cv2.dilate(thickened, kernal_square, iterations=1)
# thickened = cv2.erode(thresholded, kernal_square, iterations=5)





Oats have been observed with the following profiles: 

H   S   V       R   G   B
40  9   249     249 246 240
345 4   254     254 250 251
60  6   254     254 254 248
180 5   254     249 254 254
112 8   254     247 254 246
43  67  250     250 231 184
75  8   245     252 254 246
195 5   254     249 253 254
61  51  249     248 249 199
38  90  221

Range: 
    H: under 75, above 112
    S: under 90, above 4
    V: above 221

    R: above 247
    G: above 231
    B: above 184






Sesame seeds have been observed with the following profiles: 

H   S   V
18  16  202
40  35  197
47  17  216
72  6   203
116 16  232
36  11  226
38  30  226
47  22  224

Range: 
    H: above 18, below 116
    S: above 6, below 35
    V: above 197, below 232